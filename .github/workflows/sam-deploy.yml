name: CI/CD SAM deploy

on:
  push:
    tags:
      - 'v*' # release to production, any tag follow this pattern.
    branches:
      # - master # will be used to deploy SIT build
      - develop

jobs:
  run_unit_tests:
    name: Run Unit Test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have a requirements.txt file
      
      # It run all tests under ./tests path output report to `./coverage.xml` and html report in ./htmlcov
      # --cov=. is to track coverage for all module
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          echo "Coverage percentage is $COVERAGE_PERCENTAGE"
          pytest --cov-report term --cov-report xml:junit/coverage.xml --cov=. --cov-fail-under=int($COVERAGE_PERCENTAGE) && coverage html

      # - name: Check test status
      #   if: ${{failure()}}
      #   run: exit 1
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with: 
          name: test-results
          path: |
            junit
            htmlcov/**/*.*
          # Run this step to publish test results when there are test failures
        if: ${{always()}}

  deploy_dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    permissions:
      contents: write
    needs: run_unit_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1 # Replace with your AWS region

      - name: Build and Test for Dev
        run: |
          sam build --use-container --parameter-overrides Environment=dev

      - name: Zip build folder
        run: zip -r build.zip .aws-sam/build
      
      - name: Publish release artifact to github release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build.zip

      # Prevent prompts and failure when the stack is unchanged
      - name: Sam deploying production
        run: sam deploy --config-file samconfig-dev.toml --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides Environment=dev

  # deploy_prod:
  #   runs-on: ubuntu-latest
  #   if: github.ref_type == 'tag'
    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.x

  #     - name: Install SAM CLI
  #       uses: aws-actions/setup-sam@v2
  #       with:
  #         use-installer: true
      
  #     - name: Set up AWS CLI
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
  #         aws-region: us-east-1 # Replace with your AWS region

  #     - name: Build and Test for Prod
  #       run: |
  #         sam build --use-container --parameter-overrides Environment=prod
      
  #     - name: Zip build folder
  #       run: zip -r build.zip .aws-sam/build
      
  #     - name: Publish release artifact to github release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: build.zip

  #     # Prevent prompts and failure when the stack is unchanged
  #     - name: Sam deploying production
  #       run: sam deploy --config-file samconfig.toml--no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides Environment=prod
